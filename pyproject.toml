[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "django-postgres-copy"
description = "Quickly import and export delimited data with Django support for PostgreSQL's COPY command"
readme = "README.md"
authors = [
    {name = "Ben Welsh", email = "b@palewi.re"},
]
license = "MIT"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: Django",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.1",
    "Framework :: Django :: 5.2",
]
requires-python = ">=3.9"
dependencies = []
dynamic = ["version"]

[project.urls]
Documentation = "https://palewi.re/docs/django-postgres-copy/"
Source = "https://github.com/palewire/django-postgres-copy"
Tracker = "https://github.com/palewire/django-postgres-copy/issues"
Tests = "https://github.com/palewire/django-postgres-copy/actions/workflows/test.yaml"

[tool.setuptools]
packages = ["postgres_copy"]

[tool.setuptools.package-data]
postgres_copy = ["py.typed"]

[tool.setuptools_scm]

[tool.pytest]
python_files = ["test*.py", "test_*.py", "*_test.py"]

[tool.flake8]
max-line-length = 119
ignore = ["D100", "D101", "D102", "D103", "D104", "D106", "D107", "D200", "D205", "D400", "D401", "SIM115", "B006"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
exclude = "^(tests|docs)/.*"

[[tool.mypy.overrides]]
module = "django.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "psycopg.*"
ignore_missing_imports = true

[project.optional-dependencies]
dev = [
    "coverage",
    "mock",
    "pre-commit",
    "pytest-runner",
    "pytest-cov",
    "pytest-env",
    "pytest-django",
    "setuptools-scm",
    "twine",
    "wheel",
]
mypy = [
    "mypy",
    "types-psycopg2",
    "django-stubs",
]
docs = [
    "sphinx",
    "sphinx-autobuild",
    "sphinx-palewire-theme",
    "myst-parser",
]


[tool.pytest.ini_options]
addopts = "-p no:warnings --cov=postgres_copy --cov-branch -cov-report=term-missing:skip-covered --cov-context=test"
testpaths = ["tests"]
python_files = "test_*.py"
DJANGO_SETTINGS_MODULE = "tests.settings"

[tool.coverage.run]
source = ["postgres_copy"]
relative_files = true
omit = [
    "*/__pycache__/*",
    "tests",
]
